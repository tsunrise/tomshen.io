(function() {var implementors = {};
implementors["algebra"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"algebra/bls12_377/struct.Parameters.html\" title=\"struct algebra::bls12_377::Parameters\">Parameters</a>","synthetic":true,"types":["algebra::bls12_377::curves::Parameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra/bls12_377/struct.FrParameters.html\" title=\"struct algebra::bls12_377::FrParameters\">FrParameters</a>","synthetic":true,"types":["algebra::bls12_377::fields::fr::FrParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra/bls12_377/struct.FqParameters.html\" title=\"struct algebra::bls12_377::FqParameters\">FqParameters</a>","synthetic":true,"types":["algebra::bls12_377::fields::fq::FqParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra/bls12_377/struct.Fq2Parameters.html\" title=\"struct algebra::bls12_377::Fq2Parameters\">Fq2Parameters</a>","synthetic":true,"types":["algebra::bls12_377::fields::fq2::Fq2Parameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra/bls12_377/struct.Fq6Parameters.html\" title=\"struct algebra::bls12_377::Fq6Parameters\">Fq6Parameters</a>","synthetic":true,"types":["algebra::bls12_377::fields::fq6::Fq6Parameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra/bls12_377/struct.Fq12Parameters.html\" title=\"struct algebra::bls12_377::Fq12Parameters\">Fq12Parameters</a>","synthetic":true,"types":["algebra::bls12_377::fields::fq12::Fq12Parameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra/bls12_377/g1/struct.Parameters.html\" title=\"struct algebra::bls12_377::g1::Parameters\">Parameters</a>","synthetic":true,"types":["algebra::bls12_377::curves::g1::Parameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra/bls12_377/g2/struct.Parameters.html\" title=\"struct algebra::bls12_377::g2::Parameters\">Parameters</a>","synthetic":true,"types":["algebra::bls12_377::curves::g2::Parameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra/ed_on_bls12_381/struct.FqParameters.html\" title=\"struct algebra::ed_on_bls12_381::FqParameters\">FrParameters</a>","synthetic":true,"types":["algebra::bls12_381::fields::fr::FrParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra/ed_on_bls12_381/struct.EdwardsParameters.html\" title=\"struct algebra::ed_on_bls12_381::EdwardsParameters\">EdwardsParameters</a>","synthetic":true,"types":["algebra::ed_on_bls12_381::curves::EdwardsParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra/ed_on_bls12_381/struct.FrParameters.html\" title=\"struct algebra::ed_on_bls12_381::FrParameters\">FrParameters</a>","synthetic":true,"types":["algebra::ed_on_bls12_381::fields::fr::FrParameters"]}];
implementors["algebra_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"algebra_core/serialize/struct.EmptyFlags.html\" title=\"struct algebra_core::serialize::EmptyFlags\">EmptyFlags</a>","synthetic":true,"types":["algebra_core::serialize::flags::EmptyFlags"]},{"text":"impl Freeze for <a class=\"enum\" href=\"algebra_core/serialize/enum.SerializationError.html\" title=\"enum algebra_core::serialize::SerializationError\">SerializationError</a>","synthetic":true,"types":["algebra_core::serialize::error::SerializationError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"algebra_core/serialize/enum.SWFlags.html\" title=\"enum algebra_core::serialize::SWFlags\">SWFlags</a>","synthetic":true,"types":["algebra_core::serialize::flags::SWFlags"]},{"text":"impl Freeze for <a class=\"enum\" href=\"algebra_core/serialize/enum.EdwardsFlags.html\" title=\"enum algebra_core::serialize::EdwardsFlags\">EdwardsFlags</a>","synthetic":true,"types":["algebra_core::serialize::flags::EdwardsFlags"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/struct.BitIterator.html\" title=\"struct algebra_core::fields::BitIterator\">BitIterator</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["algebra_core::fields::BitIterator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"algebra_core/fields/enum.LegendreSymbol.html\" title=\"enum algebra_core::fields::LegendreSymbol\">LegendreSymbol</a>","synthetic":true,"types":["algebra_core::fields::LegendreSymbol"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/struct.Fp256.html\" title=\"struct algebra_core::fields::models::Fp256\">Fp256</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::fields::models::Fp256"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/struct.Fp320.html\" title=\"struct algebra_core::fields::models::Fp320\">Fp320</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::fields::models::Fp320"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/struct.Fp384.html\" title=\"struct algebra_core::fields::models::Fp384\">Fp384</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::fields::models::Fp384"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/struct.Fp768.html\" title=\"struct algebra_core::fields::models::Fp768\">Fp768</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::fields::models::Fp768"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/struct.Fp832.html\" title=\"struct algebra_core::fields::models::Fp832\">Fp832</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::fields::models::Fp832"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/fp2/struct.Fp2ParamsWrapper.html\" title=\"struct algebra_core::fields::models::fp2::Fp2ParamsWrapper\">Fp2ParamsWrapper</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::fields::models::fp2::Fp2ParamsWrapper"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/fp3/struct.Fp3ParamsWrapper.html\" title=\"struct algebra_core::fields::models::fp3::Fp3ParamsWrapper\">Fp3ParamsWrapper</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::fields::models::fp3::Fp3ParamsWrapper"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/fp4/struct.Fp4ParamsWrapper.html\" title=\"struct algebra_core::fields::models::fp4::Fp4ParamsWrapper\">Fp4ParamsWrapper</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::fields::models::fp4::Fp4ParamsWrapper"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/fp6_2over3/struct.Fp6ParamsWrapper.html\" title=\"struct algebra_core::fields::models::fp6_2over3::Fp6ParamsWrapper\">Fp6ParamsWrapper</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::fields::models::fp6_2over3::Fp6ParamsWrapper"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/fp6_3over2/struct.Fp6ParamsWrapper.html\" title=\"struct algebra_core::fields::models::fp6_3over2::Fp6ParamsWrapper\">Fp6ParamsWrapper</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::fields::models::fp6_3over2::Fp6ParamsWrapper"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/fp12_2over3over2/struct.Fp12ParamsWrapper.html\" title=\"struct algebra_core::fields::models::fp12_2over3over2::Fp12ParamsWrapper\">Fp12ParamsWrapper</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::fields::models::fp12_2over3over2::Fp12ParamsWrapper"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/quadratic_extension/struct.QuadExtField.html\" title=\"struct algebra_core::fields::models::quadratic_extension::QuadExtField\">QuadExtField</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/fields/models/quadratic_extension/trait.QuadExtParameters.html\" title=\"trait algebra_core::fields::models::quadratic_extension::QuadExtParameters\">QuadExtParameters</a>&gt;::<a class=\"type\" href=\"algebra_core/fields/models/quadratic_extension/trait.QuadExtParameters.html#associatedtype.BaseField\" title=\"type algebra_core::fields::models::quadratic_extension::QuadExtParameters::BaseField\">BaseField</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["algebra_core::fields::models::quadratic_extension::QuadExtField"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/fields/models/cubic_extension/struct.CubicExtField.html\" title=\"struct algebra_core::fields::models::cubic_extension::CubicExtField\">CubicExtField</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/fields/models/cubic_extension/trait.CubicExtParameters.html\" title=\"trait algebra_core::fields::models::cubic_extension::CubicExtParameters\">CubicExtParameters</a>&gt;::<a class=\"type\" href=\"algebra_core/fields/models/cubic_extension/trait.CubicExtParameters.html#associatedtype.BaseField\" title=\"type algebra_core::fields::models::cubic_extension::CubicExtParameters::BaseField\">BaseField</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["algebra_core::fields::models::cubic_extension::CubicExtField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra_core/biginteger/struct.BigInteger64.html\" title=\"struct algebra_core::biginteger::BigInteger64\">BigInteger64</a>","synthetic":true,"types":["algebra_core::biginteger::BigInteger64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra_core/biginteger/struct.BigInteger128.html\" title=\"struct algebra_core::biginteger::BigInteger128\">BigInteger128</a>","synthetic":true,"types":["algebra_core::biginteger::BigInteger128"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra_core/biginteger/struct.BigInteger256.html\" title=\"struct algebra_core::biginteger::BigInteger256\">BigInteger256</a>","synthetic":true,"types":["algebra_core::biginteger::BigInteger256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra_core/biginteger/struct.BigInteger320.html\" title=\"struct algebra_core::biginteger::BigInteger320\">BigInteger320</a>","synthetic":true,"types":["algebra_core::biginteger::BigInteger320"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra_core/biginteger/struct.BigInteger384.html\" title=\"struct algebra_core::biginteger::BigInteger384\">BigInteger384</a>","synthetic":true,"types":["algebra_core::biginteger::BigInteger384"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra_core/biginteger/struct.BigInteger768.html\" title=\"struct algebra_core::biginteger::BigInteger768\">BigInteger768</a>","synthetic":true,"types":["algebra_core::biginteger::BigInteger768"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra_core/biginteger/struct.BigInteger832.html\" title=\"struct algebra_core::biginteger::BigInteger832\">BigInteger832</a>","synthetic":true,"types":["algebra_core::biginteger::BigInteger832"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/bls12/struct.Bls12.html\" title=\"struct algebra_core::curves::models::bls12::Bls12\">Bls12</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::curves::models::bls12::Bls12"]},{"text":"impl Freeze for <a class=\"enum\" href=\"algebra_core/curves/models/bls12/enum.TwistType.html\" title=\"enum algebra_core::curves::models::bls12::TwistType\">TwistType</a>","synthetic":true,"types":["algebra_core::curves::models::bls12::TwistType"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/bls12/g1/struct.G1Prepared.html\" title=\"struct algebra_core::curves::models::bls12::g1::G1Prepared\">G1Prepared</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/bls12/trait.Bls12Parameters.html\" title=\"trait algebra_core::curves::models::bls12::Bls12Parameters\">Bls12Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/bls12/trait.Bls12Parameters.html#associatedtype.Fp\" title=\"type algebra_core::curves::models::bls12::Bls12Parameters::Fp\">Fp</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/bls12/trait.Bls12Parameters.html\" title=\"trait algebra_core::curves::models::bls12::Bls12Parameters\">Bls12Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/bls12/trait.Bls12Parameters.html#associatedtype.G1Parameters\" title=\"type algebra_core::curves::models::bls12::Bls12Parameters::G1Parameters\">G1Parameters</a>: <a class=\"trait\" href=\"algebra_core/curves/models/trait.ModelParameters.html\" title=\"trait algebra_core::curves::models::ModelParameters\">ModelParameters</a>,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::bls12::g1::G1Prepared"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/bls12/g2/struct.G2Prepared.html\" title=\"struct algebra_core::curves::models::bls12::g2::G2Prepared\">G2Prepared</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::curves::models::bls12::g2::G2Prepared"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/bn/struct.Bn.html\" title=\"struct algebra_core::curves::models::bn::Bn\">Bn</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::curves::models::bn::Bn"]},{"text":"impl Freeze for <a class=\"enum\" href=\"algebra_core/curves/models/bn/enum.TwistType.html\" title=\"enum algebra_core::curves::models::bn::TwistType\">TwistType</a>","synthetic":true,"types":["algebra_core::curves::models::bn::TwistType"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/bn/g1/struct.G1Prepared.html\" title=\"struct algebra_core::curves::models::bn::g1::G1Prepared\">G1Prepared</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/bn/trait.BnParameters.html\" title=\"trait algebra_core::curves::models::bn::BnParameters\">BnParameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/bn/trait.BnParameters.html#associatedtype.Fp\" title=\"type algebra_core::curves::models::bn::BnParameters::Fp\">Fp</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/bn/trait.BnParameters.html\" title=\"trait algebra_core::curves::models::bn::BnParameters\">BnParameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/bn/trait.BnParameters.html#associatedtype.G1Parameters\" title=\"type algebra_core::curves::models::bn::BnParameters::G1Parameters\">G1Parameters</a>: <a class=\"trait\" href=\"algebra_core/curves/models/trait.ModelParameters.html\" title=\"trait algebra_core::curves::models::ModelParameters\">ModelParameters</a>,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::bn::g1::G1Prepared"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/bn/g2/struct.G2Prepared.html\" title=\"struct algebra_core::curves::models::bn::g2::G2Prepared\">G2Prepared</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::curves::models::bn::g2::G2Prepared"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/bw6/struct.BW6.html\" title=\"struct algebra_core::curves::models::bw6::BW6\">BW6</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::curves::models::bw6::BW6"]},{"text":"impl Freeze for <a class=\"enum\" href=\"algebra_core/curves/models/bw6/enum.TwistType.html\" title=\"enum algebra_core::curves::models::bw6::TwistType\">TwistType</a>","synthetic":true,"types":["algebra_core::curves::models::bw6::TwistType"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/bw6/g1/struct.G1Prepared.html\" title=\"struct algebra_core::curves::models::bw6::g1::G1Prepared\">G1Prepared</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/bw6/trait.BW6Parameters.html\" title=\"trait algebra_core::curves::models::bw6::BW6Parameters\">BW6Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/bw6/trait.BW6Parameters.html#associatedtype.Fp\" title=\"type algebra_core::curves::models::bw6::BW6Parameters::Fp\">Fp</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/bw6/trait.BW6Parameters.html\" title=\"trait algebra_core::curves::models::bw6::BW6Parameters\">BW6Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/bw6/trait.BW6Parameters.html#associatedtype.G1Parameters\" title=\"type algebra_core::curves::models::bw6::BW6Parameters::G1Parameters\">G1Parameters</a>: <a class=\"trait\" href=\"algebra_core/curves/models/trait.ModelParameters.html\" title=\"trait algebra_core::curves::models::ModelParameters\">ModelParameters</a>,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::bw6::g1::G1Prepared"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/bw6/g2/struct.G2Prepared.html\" title=\"struct algebra_core::curves::models::bw6::g2::G2Prepared\">G2Prepared</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::curves::models::bw6::g2::G2Prepared"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/mnt4/struct.MNT4.html\" title=\"struct algebra_core::curves::models::mnt4::MNT4\">MNT4</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::curves::models::mnt4::MNT4"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/mnt4/g1/struct.G1Prepared.html\" title=\"struct algebra_core::curves::models::mnt4::g1::G1Prepared\">G1Prepared</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html\" title=\"trait algebra_core::curves::models::mnt4::MNT4Parameters\">MNT4Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html#associatedtype.Fp\" title=\"type algebra_core::curves::models::mnt4::MNT4Parameters::Fp\">Fp</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html\" title=\"trait algebra_core::curves::models::mnt4::MNT4Parameters\">MNT4Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html#associatedtype.Fp2Params\" title=\"type algebra_core::curves::models::mnt4::MNT4Parameters::Fp2Params\">Fp2Params</a>: <a class=\"trait\" href=\"algebra_core/fields/models/fp2/trait.Fp2Parameters.html\" title=\"trait algebra_core::fields::models::fp2::Fp2Parameters\">Fp2Parameters</a>,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::mnt4::g1::G1Prepared"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/mnt4/g2/struct.G2Prepared.html\" title=\"struct algebra_core::curves::models::mnt4::g2::G2Prepared\">G2Prepared</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html\" title=\"trait algebra_core::curves::models::mnt4::MNT4Parameters\">MNT4Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html#associatedtype.Fp\" title=\"type algebra_core::curves::models::mnt4::MNT4Parameters::Fp\">Fp</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html\" title=\"trait algebra_core::curves::models::mnt4::MNT4Parameters\">MNT4Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html#associatedtype.Fp2Params\" title=\"type algebra_core::curves::models::mnt4::MNT4Parameters::Fp2Params\">Fp2Params</a>: <a class=\"trait\" href=\"algebra_core/fields/models/fp2/trait.Fp2Parameters.html\" title=\"trait algebra_core::fields::models::fp2::Fp2Parameters\">Fp2Parameters</a>,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::mnt4::g2::G2Prepared"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/mnt4/g2/struct.AteDoubleCoefficients.html\" title=\"struct algebra_core::curves::models::mnt4::g2::AteDoubleCoefficients\">AteDoubleCoefficients</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html\" title=\"trait algebra_core::curves::models::mnt4::MNT4Parameters\">MNT4Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html#associatedtype.Fp\" title=\"type algebra_core::curves::models::mnt4::MNT4Parameters::Fp\">Fp</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html\" title=\"trait algebra_core::curves::models::mnt4::MNT4Parameters\">MNT4Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html#associatedtype.Fp2Params\" title=\"type algebra_core::curves::models::mnt4::MNT4Parameters::Fp2Params\">Fp2Params</a>: <a class=\"trait\" href=\"algebra_core/fields/models/fp2/trait.Fp2Parameters.html\" title=\"trait algebra_core::fields::models::fp2::Fp2Parameters\">Fp2Parameters</a>,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::mnt4::g2::AteDoubleCoefficients"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/mnt4/g2/struct.AteAdditionCoefficients.html\" title=\"struct algebra_core::curves::models::mnt4::g2::AteAdditionCoefficients\">AteAdditionCoefficients</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html\" title=\"trait algebra_core::curves::models::mnt4::MNT4Parameters\">MNT4Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html#associatedtype.Fp\" title=\"type algebra_core::curves::models::mnt4::MNT4Parameters::Fp\">Fp</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html\" title=\"trait algebra_core::curves::models::mnt4::MNT4Parameters\">MNT4Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt4/trait.MNT4Parameters.html#associatedtype.Fp2Params\" title=\"type algebra_core::curves::models::mnt4::MNT4Parameters::Fp2Params\">Fp2Params</a>: <a class=\"trait\" href=\"algebra_core/fields/models/fp2/trait.Fp2Parameters.html\" title=\"trait algebra_core::fields::models::fp2::Fp2Parameters\">Fp2Parameters</a>,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::mnt4::g2::AteAdditionCoefficients"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/mnt6/struct.MNT6.html\" title=\"struct algebra_core::curves::models::mnt6::MNT6\">MNT6</a>&lt;P&gt;","synthetic":true,"types":["algebra_core::curves::models::mnt6::MNT6"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/mnt6/g1/struct.G1Prepared.html\" title=\"struct algebra_core::curves::models::mnt6::g1::G1Prepared\">G1Prepared</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html\" title=\"trait algebra_core::curves::models::mnt6::MNT6Parameters\">MNT6Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html#associatedtype.Fp\" title=\"type algebra_core::curves::models::mnt6::MNT6Parameters::Fp\">Fp</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html\" title=\"trait algebra_core::curves::models::mnt6::MNT6Parameters\">MNT6Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html#associatedtype.Fp3Params\" title=\"type algebra_core::curves::models::mnt6::MNT6Parameters::Fp3Params\">Fp3Params</a>: <a class=\"trait\" href=\"algebra_core/fields/models/fp3/trait.Fp3Parameters.html\" title=\"trait algebra_core::fields::models::fp3::Fp3Parameters\">Fp3Parameters</a>,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::mnt6::g1::G1Prepared"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/mnt6/g2/struct.G2Prepared.html\" title=\"struct algebra_core::curves::models::mnt6::g2::G2Prepared\">G2Prepared</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html\" title=\"trait algebra_core::curves::models::mnt6::MNT6Parameters\">MNT6Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html#associatedtype.Fp\" title=\"type algebra_core::curves::models::mnt6::MNT6Parameters::Fp\">Fp</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html\" title=\"trait algebra_core::curves::models::mnt6::MNT6Parameters\">MNT6Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html#associatedtype.Fp3Params\" title=\"type algebra_core::curves::models::mnt6::MNT6Parameters::Fp3Params\">Fp3Params</a>: <a class=\"trait\" href=\"algebra_core/fields/models/fp3/trait.Fp3Parameters.html\" title=\"trait algebra_core::fields::models::fp3::Fp3Parameters\">Fp3Parameters</a>,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::mnt6::g2::G2Prepared"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/mnt6/g2/struct.AteDoubleCoefficients.html\" title=\"struct algebra_core::curves::models::mnt6::g2::AteDoubleCoefficients\">AteDoubleCoefficients</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html\" title=\"trait algebra_core::curves::models::mnt6::MNT6Parameters\">MNT6Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html#associatedtype.Fp\" title=\"type algebra_core::curves::models::mnt6::MNT6Parameters::Fp\">Fp</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html\" title=\"trait algebra_core::curves::models::mnt6::MNT6Parameters\">MNT6Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html#associatedtype.Fp3Params\" title=\"type algebra_core::curves::models::mnt6::MNT6Parameters::Fp3Params\">Fp3Params</a>: <a class=\"trait\" href=\"algebra_core/fields/models/fp3/trait.Fp3Parameters.html\" title=\"trait algebra_core::fields::models::fp3::Fp3Parameters\">Fp3Parameters</a>,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::mnt6::g2::AteDoubleCoefficients"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/mnt6/g2/struct.AteAdditionCoefficients.html\" title=\"struct algebra_core::curves::models::mnt6::g2::AteAdditionCoefficients\">AteAdditionCoefficients</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html\" title=\"trait algebra_core::curves::models::mnt6::MNT6Parameters\">MNT6Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html#associatedtype.Fp\" title=\"type algebra_core::curves::models::mnt6::MNT6Parameters::Fp\">Fp</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html\" title=\"trait algebra_core::curves::models::mnt6::MNT6Parameters\">MNT6Parameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/mnt6/trait.MNT6Parameters.html#associatedtype.Fp3Params\" title=\"type algebra_core::curves::models::mnt6::MNT6Parameters::Fp3Params\">Fp3Params</a>: <a class=\"trait\" href=\"algebra_core/fields/models/fp3/trait.Fp3Parameters.html\" title=\"trait algebra_core::fields::models::fp3::Fp3Parameters\">Fp3Parameters</a>,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::mnt6::g2::AteAdditionCoefficients"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/short_weierstrass_jacobian/struct.GroupAffine.html\" title=\"struct algebra_core::curves::models::short_weierstrass_jacobian::GroupAffine\">GroupAffine</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/trait.ModelParameters.html\" title=\"trait algebra_core::curves::models::ModelParameters\">ModelParameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/trait.ModelParameters.html#associatedtype.BaseField\" title=\"type algebra_core::curves::models::ModelParameters::BaseField\">BaseField</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::short_weierstrass_jacobian::GroupAffine"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/short_weierstrass_jacobian/struct.GroupProjective.html\" title=\"struct algebra_core::curves::models::short_weierstrass_jacobian::GroupProjective\">GroupProjective</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/trait.ModelParameters.html\" title=\"trait algebra_core::curves::models::ModelParameters\">ModelParameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/trait.ModelParameters.html#associatedtype.BaseField\" title=\"type algebra_core::curves::models::ModelParameters::BaseField\">BaseField</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::short_weierstrass_jacobian::GroupProjective"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/short_weierstrass_projective/struct.GroupAffine.html\" title=\"struct algebra_core::curves::models::short_weierstrass_projective::GroupAffine\">GroupAffine</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/trait.ModelParameters.html\" title=\"trait algebra_core::curves::models::ModelParameters\">ModelParameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/trait.ModelParameters.html#associatedtype.BaseField\" title=\"type algebra_core::curves::models::ModelParameters::BaseField\">BaseField</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::short_weierstrass_projective::GroupAffine"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/short_weierstrass_projective/struct.GroupProjective.html\" title=\"struct algebra_core::curves::models::short_weierstrass_projective::GroupProjective\">GroupProjective</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/trait.ModelParameters.html\" title=\"trait algebra_core::curves::models::ModelParameters\">ModelParameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/trait.ModelParameters.html#associatedtype.BaseField\" title=\"type algebra_core::curves::models::ModelParameters::BaseField\">BaseField</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::short_weierstrass_projective::GroupProjective"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/twisted_edwards_extended/struct.GroupAffine.html\" title=\"struct algebra_core::curves::models::twisted_edwards_extended::GroupAffine\">GroupAffine</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/trait.ModelParameters.html\" title=\"trait algebra_core::curves::models::ModelParameters\">ModelParameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/trait.ModelParameters.html#associatedtype.BaseField\" title=\"type algebra_core::curves::models::ModelParameters::BaseField\">BaseField</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::twisted_edwards_extended::GroupAffine"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/twisted_edwards_extended/struct.GroupProjective.html\" title=\"struct algebra_core::curves::models::twisted_edwards_extended::GroupProjective\">GroupProjective</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/trait.ModelParameters.html\" title=\"trait algebra_core::curves::models::ModelParameters\">ModelParameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/trait.ModelParameters.html#associatedtype.BaseField\" title=\"type algebra_core::curves::models::ModelParameters::BaseField\">BaseField</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::twisted_edwards_extended::GroupProjective"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"algebra_core/curves/models/twisted_edwards_extended/struct.MontgomeryGroupAffine.html\" title=\"struct algebra_core::curves::models::twisted_edwards_extended::MontgomeryGroupAffine\">MontgomeryGroupAffine</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;P as <a class=\"trait\" href=\"algebra_core/curves/models/trait.ModelParameters.html\" title=\"trait algebra_core::curves::models::ModelParameters\">ModelParameters</a>&gt;::<a class=\"type\" href=\"algebra_core/curves/models/trait.ModelParameters.html#associatedtype.BaseField\" title=\"type algebra_core::curves::models::ModelParameters::BaseField\">BaseField</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["algebra_core::curves::models::twisted_edwards_extended::MontgomeryGroupAffine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra_core/msm/struct.FixedBaseMSM.html\" title=\"struct algebra_core::msm::FixedBaseMSM\">FixedBaseMSM</a>","synthetic":true,"types":["algebra_core::msm::fixed_base::FixedBaseMSM"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra_core/msm/struct.VariableBaseMSM.html\" title=\"struct algebra_core::msm::VariableBaseMSM\">VariableBaseMSM</a>","synthetic":true,"types":["algebra_core::msm::variable_base::VariableBaseMSM"]},{"text":"impl Freeze for <a class=\"struct\" href=\"algebra_core/io/struct.Error.html\" title=\"struct algebra_core::io::Error\">Error</a>","synthetic":true,"types":["algebra_core::io::Error"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"algebra_core/io/struct.Cursor.html\" title=\"struct algebra_core::io::Cursor\">Cursor</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["algebra_core::io::Cursor"]}];
implementors["blake2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"blake2/struct.Blake2b.html\" title=\"struct blake2::Blake2b\">Blake2b</a>","synthetic":true,"types":["blake2::blake2b::Blake2b"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blake2/struct.VarBlake2b.html\" title=\"struct blake2::VarBlake2b\">VarBlake2b</a>","synthetic":true,"types":["blake2::blake2b::VarBlake2b"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blake2/struct.Blake2s.html\" title=\"struct blake2::Blake2s\">Blake2s</a>","synthetic":true,"types":["blake2::blake2s::Blake2s"]},{"text":"impl Freeze for <a class=\"struct\" href=\"blake2/struct.VarBlake2s.html\" title=\"struct blake2::VarBlake2s\">VarBlake2s</a>","synthetic":true,"types":["blake2::blake2s::VarBlake2s"]}];
implementors["byteorder"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>","synthetic":true,"types":["byteorder::BigEndian"]},{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["byteorder::LittleEndian"]}];
implementors["crypto_mac"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"crypto_mac/struct.InvalidKeyLength.html\" title=\"struct crypto_mac::InvalidKeyLength\">InvalidKeyLength</a>","synthetic":true,"types":["crypto_mac::errors::InvalidKeyLength"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto_mac/struct.MacError.html\" title=\"struct crypto_mac::MacError\">MacError</a>","synthetic":true,"types":["crypto_mac::errors::MacError"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"crypto_mac/struct.Output.html\" title=\"struct crypto_mac::Output\">Output</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;M as <a class=\"trait\" href=\"crypto_mac/trait.Mac.html\" title=\"trait crypto_mac::Mac\">Mac</a>&gt;::<a class=\"type\" href=\"crypto_mac/trait.Mac.html#associatedtype.OutputSize\" title=\"type crypto_mac::Mac::OutputSize\">OutputSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;u8&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto_mac::Output"]}];
implementors["digest"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"digest/struct.InvalidOutputSize.html\" title=\"struct digest::InvalidOutputSize\">InvalidOutputSize</a>","synthetic":true,"types":["digest::errors::InvalidOutputSize"]}];
implementors["ff_fft"] = [{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"ff_fft/struct.DensePolynomial.html\" title=\"struct ff_fft::DensePolynomial\">DensePolynomial</a>&lt;F&gt;","synthetic":true,"types":["ff_fft::polynomial::dense::DensePolynomial"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"ff_fft/struct.SparsePolynomial.html\" title=\"struct ff_fft::SparsePolynomial\">SparsePolynomial</a>&lt;F&gt;","synthetic":true,"types":["ff_fft::polynomial::sparse::SparsePolynomial"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"ff_fft/domain/general/struct.Elements.html\" title=\"struct ff_fft::domain::general::Elements\">Elements</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["ff_fft::domain::utils::Elements"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"enum\" href=\"ff_fft/domain/general/enum.GeneralEvaluationDomain.html\" title=\"enum ff_fft::domain::general::GeneralEvaluationDomain\">GeneralEvaluationDomain</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["ff_fft::domain::general::GeneralEvaluationDomain"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"enum\" href=\"ff_fft/domain/general/enum.GeneralElements.html\" title=\"enum ff_fft::domain::general::GeneralElements\">GeneralElements</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["ff_fft::domain::general::GeneralElements"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"ff_fft/domain/mixed_radix/struct.MixedRadixEvaluationDomain.html\" title=\"struct ff_fft::domain::mixed_radix::MixedRadixEvaluationDomain\">MixedRadixEvaluationDomain</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["ff_fft::domain::mixed_radix::MixedRadixEvaluationDomain"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"ff_fft/domain/radix2/struct.Radix2EvaluationDomain.html\" title=\"struct ff_fft::domain::radix2::Radix2EvaluationDomain\">Radix2EvaluationDomain</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["ff_fft::domain::radix2::Radix2EvaluationDomain"]},{"text":"impl&lt;F, D&gt; Freeze for <a class=\"struct\" href=\"ff_fft/evaluations/struct.Evaluations.html\" title=\"struct ff_fft::evaluations::Evaluations\">Evaluations</a>&lt;F, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ff_fft::evaluations::Evaluations"]},{"text":"impl&lt;'a, F&gt; Freeze for <a class=\"enum\" href=\"ff_fft/polynomial/enum.DenseOrSparsePolynomial.html\" title=\"enum ff_fft::polynomial::DenseOrSparsePolynomial\">DenseOrSparsePolynomial</a>&lt;'a, F&gt;","synthetic":true,"types":["ff_fft::polynomial::DenseOrSparsePolynomial"]}];
implementors["generic_array"] = [{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::GenericArray"]},{"text":"impl&lt;T, N&gt; Freeze for <a class=\"struct\" href=\"generic_array/iter/struct.GenericArrayIter.html\" title=\"struct generic_array::iter::GenericArrayIter\">GenericArrayIter</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::iter::GenericArrayIter"]}];
implementors["getrandom"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"getrandom/struct.Error.html\" title=\"struct getrandom::Error\">Error</a>","synthetic":true,"types":["getrandom::error::Error"]}];
implementors["linear_sumcheck"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"linear_sumcheck/enum.Error.html\" title=\"enum linear_sumcheck::Error\">Error</a>","synthetic":true,"types":["linear_sumcheck::error::Error"]},{"text":"impl&lt;F, S, D&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/gkr_round_sumcheck/xzzps19/struct.XZZPS19Sumcheck.html\" title=\"struct linear_sumcheck::gkr_round_sumcheck::xzzps19::XZZPS19Sumcheck\">XZZPS19Sumcheck</a>&lt;F, S, D&gt;","synthetic":true,"types":["linear_sumcheck::gkr_round_sumcheck::xzzps19::fs::XZZPS19Sumcheck"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/gkr_round_sumcheck/xzzps19/struct.XZZPS19Claim.html\" title=\"struct linear_sumcheck::gkr_round_sumcheck::xzzps19::XZZPS19Claim\">XZZPS19Claim</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["linear_sumcheck::gkr_round_sumcheck::xzzps19::fs::XZZPS19Claim"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/gkr_round_sumcheck/xzzps19/struct.XZZPS19Proof.html\" title=\"struct linear_sumcheck::gkr_round_sumcheck::xzzps19::XZZPS19Proof\">XZZPS19Proof</a>&lt;F&gt;","synthetic":true,"types":["linear_sumcheck::gkr_round_sumcheck::xzzps19::fs::XZZPS19Proof"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/gkr_round_sumcheck/xzzps19/struct.XZZPS19SubClaim.html\" title=\"struct linear_sumcheck::gkr_round_sumcheck::xzzps19::XZZPS19SubClaim\">XZZPS19SubClaim</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["linear_sumcheck::gkr_round_sumcheck::xzzps19::fs::XZZPS19SubClaim"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/ml_sumcheck/t13/struct.T13Sumcheck.html\" title=\"struct linear_sumcheck::ml_sumcheck::t13::T13Sumcheck\">T13Sumcheck</a>&lt;F&gt;","synthetic":true,"types":["linear_sumcheck::ml_sumcheck::t13::fs::T13Sumcheck"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/ml_sumcheck/t13/struct.T13Claim.html\" title=\"struct linear_sumcheck::ml_sumcheck::t13::T13Claim\">T13Claim</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["linear_sumcheck::ml_sumcheck::t13::fs::T13Claim"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/ml_sumcheck/t13/struct.T13Proof.html\" title=\"struct linear_sumcheck::ml_sumcheck::t13::T13Proof\">T13Proof</a>&lt;F&gt;","synthetic":true,"types":["linear_sumcheck::ml_sumcheck::t13::fs::T13Proof"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/ml_sumcheck/t13/struct.T13Subclaim.html\" title=\"struct linear_sumcheck::ml_sumcheck::t13::T13Subclaim\">T13Subclaim</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["linear_sumcheck::ml_sumcheck::t13::fs::T13Subclaim"]},{"text":"impl&lt;'a, F, S, D&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/data_structures/struct.GKRAsLink.html\" title=\"struct linear_sumcheck::data_structures::GKRAsLink\">GKRAsLink</a>&lt;'a, F, S, D&gt;","synthetic":true,"types":["linear_sumcheck::data_structures::impl_ml_extension::GKRAsLink"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/data_structures/struct.MLExtensionArray.html\" title=\"struct linear_sumcheck::data_structures::MLExtensionArray\">MLExtensionArray</a>&lt;F&gt;","synthetic":true,"types":["linear_sumcheck::data_structures::impl_ml_extension::MLExtensionArray"]},{"text":"impl&lt;'a, F&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/data_structures/struct.MLExtensionRefArray.html\" title=\"struct linear_sumcheck::data_structures::MLExtensionRefArray\">MLExtensionRefArray</a>&lt;'a, F&gt;","synthetic":true,"types":["linear_sumcheck::data_structures::impl_ml_extension::MLExtensionRefArray"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/data_structures/struct.SparseMLExtensionHashMap.html\" title=\"struct linear_sumcheck::data_structures::SparseMLExtensionHashMap\">SparseMLExtensionHashMap</a>&lt;F&gt;","synthetic":true,"types":["linear_sumcheck::data_structures::impl_ml_extension::SparseMLExtensionHashMap"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"linear_sumcheck/data_structures/struct.AsDummyFeedable.html\" title=\"struct linear_sumcheck::data_structures::AsDummyFeedable\">AsDummyFeedable</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["linear_sumcheck::data_structures::impl_random::AsDummyFeedable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"linear_sumcheck/data_structures/struct.Blake2s512Rng.html\" title=\"struct linear_sumcheck::data_structures::Blake2s512Rng\">Blake2s512Rng</a>","synthetic":true,"types":["linear_sumcheck::data_structures::impl_random::Blake2s512Rng"]}];
implementors["num_traits"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>","synthetic":true,"types":["num_traits::ParseFloatError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>","synthetic":true,"types":["num_traits::FloatErrorKind"]}];
implementors["ppv_lite86"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS3.html\" title=\"struct ppv_lite86::x86_64::YesS3\">YesS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS3.html\" title=\"struct ppv_lite86::x86_64::NoS3\">NoS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS4.html\" title=\"struct ppv_lite86::x86_64::YesS4\">YesS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS4.html\" title=\"struct ppv_lite86::x86_64::NoS4\">NoS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA1.html\" title=\"struct ppv_lite86::x86_64::YesA1\">YesA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA1.html\" title=\"struct ppv_lite86::x86_64::NoA1\">NoA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA2.html\" title=\"struct ppv_lite86::x86_64::YesA2\">YesA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA2.html\" title=\"struct ppv_lite86::x86_64::NoA2\">NoA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesNI.html\" title=\"struct ppv_lite86::x86_64::YesNI\">YesNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesNI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoNI.html\" title=\"struct ppv_lite86::x86_64::NoNI\">NoNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoNI"]},{"text":"impl&lt;S3, S4, NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.SseMachine.html\" title=\"struct ppv_lite86::x86_64::SseMachine\">SseMachine</a>&lt;S3, S4, NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::SseMachine"]},{"text":"impl&lt;NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.Avx2Machine.html\" title=\"struct ppv_lite86::x86_64::Avx2Machine\">Avx2Machine</a>&lt;NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::Avx2Machine"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec128_storage.html\" title=\"union ppv_lite86::x86_64::vec128_storage\">vec128_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec128_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec256_storage.html\" title=\"union ppv_lite86::x86_64::vec256_storage\">vec256_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec256_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec512_storage.html\" title=\"union ppv_lite86::x86_64::vec512_storage\">vec512_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec512_storage"]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>","synthetic":true,"types":["proc_macro2::TokenStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":true,"types":["proc_macro2::LexError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>","synthetic":true,"types":["proc_macro2::Span"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>","synthetic":true,"types":["proc_macro2::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>","synthetic":true,"types":["proc_macro2::Punct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>","synthetic":true,"types":["proc_macro2::Ident"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>","synthetic":true,"types":["proc_macro2::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>","synthetic":true,"types":["proc_macro2::TokenTree"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>","synthetic":true,"types":["proc_macro2::Delimiter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>","synthetic":true,"types":["proc_macro2::Spacing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>","synthetic":true,"types":["proc_macro2::token_stream::IntoIter"]}];
implementors["rand"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Bernoulli.html\" title=\"struct rand::distributions::Bernoulli\">Bernoulli</a>","synthetic":true,"types":["rand::distributions::bernoulli::Bernoulli"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Open01.html\" title=\"struct rand::distributions::Open01\">Open01</a>","synthetic":true,"types":["rand::distributions::float::Open01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.OpenClosed01.html\" title=\"struct rand::distributions::OpenClosed01\">OpenClosed01</a>","synthetic":true,"types":["rand::distributions::float::OpenClosed01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Alphanumeric.html\" title=\"struct rand::distributions::Alphanumeric\">Alphanumeric</a>","synthetic":true,"types":["rand::distributions::other::Alphanumeric"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.Uniform.html\" title=\"struct rand::distributions::uniform::Uniform\">Uniform</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::Uniform"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Binomial.html\" title=\"struct rand::distributions::Binomial\">Binomial</a>","synthetic":true,"types":["rand::distributions::binomial::Binomial"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Cauchy.html\" title=\"struct rand::distributions::Cauchy\">Cauchy</a>","synthetic":true,"types":["rand::distributions::cauchy::Cauchy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Dirichlet.html\" title=\"struct rand::distributions::Dirichlet\">Dirichlet</a>","synthetic":true,"types":["rand::distributions::dirichlet::Dirichlet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Exp.html\" title=\"struct rand::distributions::Exp\">Exp</a>","synthetic":true,"types":["rand::distributions::exponential::Exp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Exp1.html\" title=\"struct rand::distributions::Exp1\">Exp1</a>","synthetic":true,"types":["rand::distributions::exponential::Exp1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Beta.html\" title=\"struct rand::distributions::Beta\">Beta</a>","synthetic":true,"types":["rand::distributions::gamma::Beta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.ChiSquared.html\" title=\"struct rand::distributions::ChiSquared\">ChiSquared</a>","synthetic":true,"types":["rand::distributions::gamma::ChiSquared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.FisherF.html\" title=\"struct rand::distributions::FisherF\">FisherF</a>","synthetic":true,"types":["rand::distributions::gamma::FisherF"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Gamma.html\" title=\"struct rand::distributions::Gamma\">Gamma</a>","synthetic":true,"types":["rand::distributions::gamma::Gamma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.StudentT.html\" title=\"struct rand::distributions::StudentT\">StudentT</a>","synthetic":true,"types":["rand::distributions::gamma::StudentT"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.LogNormal.html\" title=\"struct rand::distributions::LogNormal\">LogNormal</a>","synthetic":true,"types":["rand::distributions::normal::LogNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Normal.html\" title=\"struct rand::distributions::Normal\">Normal</a>","synthetic":true,"types":["rand::distributions::normal::Normal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.StandardNormal.html\" title=\"struct rand::distributions::StandardNormal\">StandardNormal</a>","synthetic":true,"types":["rand::distributions::normal::StandardNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Pareto.html\" title=\"struct rand::distributions::Pareto\">Pareto</a>","synthetic":true,"types":["rand::distributions::pareto::Pareto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Poisson.html\" title=\"struct rand::distributions::Poisson\">Poisson</a>","synthetic":true,"types":["rand::distributions::poisson::Poisson"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Triangular.html\" title=\"struct rand::distributions::Triangular\">Triangular</a>","synthetic":true,"types":["rand::distributions::triangular::Triangular"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.UnitCircle.html\" title=\"struct rand::distributions::UnitCircle\">UnitCircle</a>","synthetic":true,"types":["rand::distributions::unit_circle::UnitCircle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.UnitSphereSurface.html\" title=\"struct rand::distributions::UnitSphereSurface\">UnitSphereSurface</a>","synthetic":true,"types":["rand::distributions::unit_sphere::UnitSphereSurface"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Weibull.html\" title=\"struct rand::distributions::Weibull\">Weibull</a>","synthetic":true,"types":["rand::distributions::weibull::Weibull"]},{"text":"impl&lt;D, R, T&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.DistIter.html\" title=\"struct rand::distributions::DistIter\">DistIter</a>&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::DistIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Standard.html\" title=\"struct rand::distributions::Standard\">Standard</a>","synthetic":true,"types":["rand::distributions::Standard"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/enum.BernoulliError.html\" title=\"enum rand::distributions::BernoulliError\">BernoulliError</a>","synthetic":true,"types":["rand::distributions::bernoulli::BernoulliError"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformInt"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformFloat.html\" title=\"struct rand::distributions::uniform::UniformFloat\">UniformFloat</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformDuration.html\" title=\"struct rand::distributions::uniform::UniformDuration\">UniformDuration</a>","synthetic":true,"types":["rand::distributions::uniform::UniformDuration"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::WeightedIndex\">WeightedIndex</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::weighted::WeightedIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/weighted/enum.WeightedError.html\" title=\"enum rand::distributions::weighted::WeightedError\">WeightedError</a>","synthetic":true,"types":["rand::distributions::weighted::WeightedError"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/alias_method/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::alias_method::WeightedIndex\">WeightedIndex</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::weighted::alias_method::WeightedIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.EntropyRng.html\" title=\"struct rand::rngs::EntropyRng\">EntropyRng</a>","synthetic":true,"types":["rand::rngs::entropy::EntropyRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.StdRng.html\" title=\"struct rand::rngs::StdRng\">StdRng</a>","synthetic":true,"types":["rand::rngs::std::StdRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.ThreadRng.html\" title=\"struct rand::rngs::ThreadRng\">ThreadRng</a>","synthetic":true,"types":["rand::rngs::thread::ThreadRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadError.html\" title=\"struct rand::rngs::adapter::ReadError\">ReadError</a>","synthetic":true,"types":["rand::rngs::adapter::read::ReadError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadRng.html\" title=\"struct rand::rngs::adapter::ReadRng\">ReadRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::read::ReadRng"]},{"text":"impl&lt;R, Rsdr&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReseedingRng.html\" title=\"struct rand::rngs::adapter::ReseedingRng\">ReseedingRng</a>&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::reseeding::ReseedingRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/mock/struct.StepRng.html\" title=\"struct rand::rngs::mock::StepRng\">StepRng</a>","synthetic":true,"types":["rand::rngs::mock::StepRng"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, T&gt; Freeze for <a class=\"struct\" href=\"rand/seq/struct.SliceChooseIter.html\" title=\"struct rand::seq::SliceChooseIter\">SliceChooseIter</a>&lt;'a, S, T&gt;","synthetic":true,"types":["rand::seq::SliceChooseIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVec.html\" title=\"enum rand::seq::index::IndexVec\">IndexVec</a>","synthetic":true,"types":["rand::seq::index::IndexVec"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIter.html\" title=\"enum rand::seq::index::IndexVecIter\">IndexVecIter</a>&lt;'a&gt;","synthetic":true,"types":["rand::seq::index::IndexVecIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIntoIter.html\" title=\"enum rand::seq::index::IndexVecIntoIter\">IndexVecIntoIter</a>","synthetic":true,"types":["rand::seq::index::IndexVecIntoIter"]}];
implementors["rand_chacha"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Core.html\" title=\"struct rand_chacha::ChaCha12Core\">ChaCha12Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Rng.html\" title=\"struct rand_chacha::ChaCha12Rng\">ChaCha12Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Core.html\" title=\"struct rand_chacha::ChaCha20Core\">ChaCha20Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Rng.html\" title=\"struct rand_chacha::ChaCha20Rng\">ChaCha20Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Core.html\" title=\"struct rand_chacha::ChaCha8Core\">ChaCha8Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Rng.html\" title=\"struct rand_chacha::ChaCha8Rng\">ChaCha8Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Rng"]}];
implementors["rand_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.Error.html\" title=\"struct rand_core::Error\">Error</a>","synthetic":true,"types":["rand_core::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.OsRng.html\" title=\"struct rand_core::OsRng\">OsRng</a>","synthetic":true,"types":["rand_core::os::OsRng"]},{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng.html\" title=\"struct rand_core::block::BlockRng\">BlockRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng"]},{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng64.html\" title=\"struct rand_core::block::BlockRng64\">BlockRng64</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng64"]}];
implementors["subtle"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>","synthetic":true,"types":["subtle::Choice"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"subtle/struct.CtOption.html\" title=\"struct subtle::CtOption\">CtOption</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["subtle::CtOption"]}];
implementors["syn"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Attribute.html\" title=\"struct syn::Attribute\">Attribute</a>","synthetic":true,"types":["syn::attr::Attribute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaList.html\" title=\"struct syn::MetaList\">MetaList</a>","synthetic":true,"types":["syn::attr::MetaList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaNameValue.html\" title=\"struct syn::MetaNameValue\">MetaNameValue</a>","synthetic":true,"types":["syn::attr::MetaNameValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Field.html\" title=\"struct syn::Field\">Field</a>","synthetic":true,"types":["syn::data::Field"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsNamed.html\" title=\"struct syn::FieldsNamed\">FieldsNamed</a>","synthetic":true,"types":["syn::data::FieldsNamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsUnnamed.html\" title=\"struct syn::FieldsUnnamed\">FieldsUnnamed</a>","synthetic":true,"types":["syn::data::FieldsUnnamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variant.html\" title=\"struct syn::Variant\">Variant</a>","synthetic":true,"types":["syn::data::Variant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisCrate.html\" title=\"struct syn::VisCrate\">VisCrate</a>","synthetic":true,"types":["syn::data::VisCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisPublic.html\" title=\"struct syn::VisPublic\">VisPublic</a>","synthetic":true,"types":["syn::data::VisPublic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisRestricted.html\" title=\"struct syn::VisRestricted\">VisRestricted</a>","synthetic":true,"types":["syn::data::VisRestricted"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Arm.html\" title=\"struct syn::Arm\">Arm</a>","synthetic":true,"types":["syn::expr::Arm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldValue.html\" title=\"struct syn::FieldValue\">FieldValue</a>","synthetic":true,"types":["syn::expr::FieldValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Label.html\" title=\"struct syn::Label\">Label</a>","synthetic":true,"types":["syn::expr::Label"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MethodTurbofish.html\" title=\"struct syn::MethodTurbofish\">MethodTurbofish</a>","synthetic":true,"types":["syn::expr::MethodTurbofish"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprArray.html\" title=\"struct syn::ExprArray\">ExprArray</a>","synthetic":true,"types":["syn::expr::ExprArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssign.html\" title=\"struct syn::ExprAssign\">ExprAssign</a>","synthetic":true,"types":["syn::expr::ExprAssign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssignOp.html\" title=\"struct syn::ExprAssignOp\">ExprAssignOp</a>","synthetic":true,"types":["syn::expr::ExprAssignOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAsync.html\" title=\"struct syn::ExprAsync\">ExprAsync</a>","synthetic":true,"types":["syn::expr::ExprAsync"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAwait.html\" title=\"struct syn::ExprAwait\">ExprAwait</a>","synthetic":true,"types":["syn::expr::ExprAwait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBinary.html\" title=\"struct syn::ExprBinary\">ExprBinary</a>","synthetic":true,"types":["syn::expr::ExprBinary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBlock.html\" title=\"struct syn::ExprBlock\">ExprBlock</a>","synthetic":true,"types":["syn::expr::ExprBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBox.html\" title=\"struct syn::ExprBox\">ExprBox</a>","synthetic":true,"types":["syn::expr::ExprBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBreak.html\" title=\"struct syn::ExprBreak\">ExprBreak</a>","synthetic":true,"types":["syn::expr::ExprBreak"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCall.html\" title=\"struct syn::ExprCall\">ExprCall</a>","synthetic":true,"types":["syn::expr::ExprCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCast.html\" title=\"struct syn::ExprCast\">ExprCast</a>","synthetic":true,"types":["syn::expr::ExprCast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprClosure.html\" title=\"struct syn::ExprClosure\">ExprClosure</a>","synthetic":true,"types":["syn::expr::ExprClosure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprContinue.html\" title=\"struct syn::ExprContinue\">ExprContinue</a>","synthetic":true,"types":["syn::expr::ExprContinue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprField.html\" title=\"struct syn::ExprField\">ExprField</a>","synthetic":true,"types":["syn::expr::ExprField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprForLoop.html\" title=\"struct syn::ExprForLoop\">ExprForLoop</a>","synthetic":true,"types":["syn::expr::ExprForLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprGroup.html\" title=\"struct syn::ExprGroup\">ExprGroup</a>","synthetic":true,"types":["syn::expr::ExprGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIf.html\" title=\"struct syn::ExprIf\">ExprIf</a>","synthetic":true,"types":["syn::expr::ExprIf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIndex.html\" title=\"struct syn::ExprIndex\">ExprIndex</a>","synthetic":true,"types":["syn::expr::ExprIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLet.html\" title=\"struct syn::ExprLet\">ExprLet</a>","synthetic":true,"types":["syn::expr::ExprLet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLit.html\" title=\"struct syn::ExprLit\">ExprLit</a>","synthetic":true,"types":["syn::expr::ExprLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLoop.html\" title=\"struct syn::ExprLoop\">ExprLoop</a>","synthetic":true,"types":["syn::expr::ExprLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMacro.html\" title=\"struct syn::ExprMacro\">ExprMacro</a>","synthetic":true,"types":["syn::expr::ExprMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMatch.html\" title=\"struct syn::ExprMatch\">ExprMatch</a>","synthetic":true,"types":["syn::expr::ExprMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMethodCall.html\" title=\"struct syn::ExprMethodCall\">ExprMethodCall</a>","synthetic":true,"types":["syn::expr::ExprMethodCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprParen.html\" title=\"struct syn::ExprParen\">ExprParen</a>","synthetic":true,"types":["syn::expr::ExprParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprPath.html\" title=\"struct syn::ExprPath\">ExprPath</a>","synthetic":true,"types":["syn::expr::ExprPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRange.html\" title=\"struct syn::ExprRange\">ExprRange</a>","synthetic":true,"types":["syn::expr::ExprRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReference.html\" title=\"struct syn::ExprReference\">ExprReference</a>","synthetic":true,"types":["syn::expr::ExprReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRepeat.html\" title=\"struct syn::ExprRepeat\">ExprRepeat</a>","synthetic":true,"types":["syn::expr::ExprRepeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReturn.html\" title=\"struct syn::ExprReturn\">ExprReturn</a>","synthetic":true,"types":["syn::expr::ExprReturn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprStruct.html\" title=\"struct syn::ExprStruct\">ExprStruct</a>","synthetic":true,"types":["syn::expr::ExprStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTry.html\" title=\"struct syn::ExprTry\">ExprTry</a>","synthetic":true,"types":["syn::expr::ExprTry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTryBlock.html\" title=\"struct syn::ExprTryBlock\">ExprTryBlock</a>","synthetic":true,"types":["syn::expr::ExprTryBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTuple.html\" title=\"struct syn::ExprTuple\">ExprTuple</a>","synthetic":true,"types":["syn::expr::ExprTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprType.html\" title=\"struct syn::ExprType\">ExprType</a>","synthetic":true,"types":["syn::expr::ExprType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnary.html\" title=\"struct syn::ExprUnary\">ExprUnary</a>","synthetic":true,"types":["syn::expr::ExprUnary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnsafe.html\" title=\"struct syn::ExprUnsafe\">ExprUnsafe</a>","synthetic":true,"types":["syn::expr::ExprUnsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprWhile.html\" title=\"struct syn::ExprWhile\">ExprWhile</a>","synthetic":true,"types":["syn::expr::ExprWhile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprYield.html\" title=\"struct syn::ExprYield\">ExprYield</a>","synthetic":true,"types":["syn::expr::ExprYield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Index.html\" title=\"struct syn::Index\">Index</a>","synthetic":true,"types":["syn::expr::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BoundLifetimes.html\" title=\"struct syn::BoundLifetimes\">BoundLifetimes</a>","synthetic":true,"types":["syn::generics::BoundLifetimes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ConstParam.html\" title=\"struct syn::ConstParam\">ConstParam</a>","synthetic":true,"types":["syn::generics::ConstParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Generics.html\" title=\"struct syn::Generics\">Generics</a>","synthetic":true,"types":["syn::generics::Generics"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LifetimeDef.html\" title=\"struct syn::LifetimeDef\">LifetimeDef</a>","synthetic":true,"types":["syn::generics::LifetimeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateEq.html\" title=\"struct syn::PredicateEq\">PredicateEq</a>","synthetic":true,"types":["syn::generics::PredicateEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateLifetime.html\" title=\"struct syn::PredicateLifetime\">PredicateLifetime</a>","synthetic":true,"types":["syn::generics::PredicateLifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateType.html\" title=\"struct syn::PredicateType\">PredicateType</a>","synthetic":true,"types":["syn::generics::PredicateType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitBound.html\" title=\"struct syn::TraitBound\">TraitBound</a>","synthetic":true,"types":["syn::generics::TraitBound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParam.html\" title=\"struct syn::TypeParam\">TypeParam</a>","synthetic":true,"types":["syn::generics::TypeParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.WhereClause.html\" title=\"struct syn::WhereClause\">WhereClause</a>","synthetic":true,"types":["syn::generics::WhereClause"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.ImplGenerics.html\" title=\"struct syn::ImplGenerics\">ImplGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::ImplGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.Turbofish.html\" title=\"struct syn::Turbofish\">Turbofish</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::Turbofish"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.TypeGenerics.html\" title=\"struct syn::TypeGenerics\">TypeGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::TypeGenerics"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemFn.html\" title=\"struct syn::ForeignItemFn\">ForeignItemFn</a>","synthetic":true,"types":["syn::item::ForeignItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemMacro.html\" title=\"struct syn::ForeignItemMacro\">ForeignItemMacro</a>","synthetic":true,"types":["syn::item::ForeignItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemStatic.html\" title=\"struct syn::ForeignItemStatic\">ForeignItemStatic</a>","synthetic":true,"types":["syn::item::ForeignItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemType.html\" title=\"struct syn::ForeignItemType\">ForeignItemType</a>","synthetic":true,"types":["syn::item::ForeignItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemConst.html\" title=\"struct syn::ImplItemConst\">ImplItemConst</a>","synthetic":true,"types":["syn::item::ImplItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMacro.html\" title=\"struct syn::ImplItemMacro\">ImplItemMacro</a>","synthetic":true,"types":["syn::item::ImplItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMethod.html\" title=\"struct syn::ImplItemMethod\">ImplItemMethod</a>","synthetic":true,"types":["syn::item::ImplItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemType.html\" title=\"struct syn::ImplItemType\">ImplItemType</a>","synthetic":true,"types":["syn::item::ImplItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemConst.html\" title=\"struct syn::ItemConst\">ItemConst</a>","synthetic":true,"types":["syn::item::ItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemEnum.html\" title=\"struct syn::ItemEnum\">ItemEnum</a>","synthetic":true,"types":["syn::item::ItemEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemExternCrate.html\" title=\"struct syn::ItemExternCrate\">ItemExternCrate</a>","synthetic":true,"types":["syn::item::ItemExternCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemFn.html\" title=\"struct syn::ItemFn\">ItemFn</a>","synthetic":true,"types":["syn::item::ItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemForeignMod.html\" title=\"struct syn::ItemForeignMod\">ItemForeignMod</a>","synthetic":true,"types":["syn::item::ItemForeignMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemImpl.html\" title=\"struct syn::ItemImpl\">ItemImpl</a>","synthetic":true,"types":["syn::item::ItemImpl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro.html\" title=\"struct syn::ItemMacro\">ItemMacro</a>","synthetic":true,"types":["syn::item::ItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro2.html\" title=\"struct syn::ItemMacro2\">ItemMacro2</a>","synthetic":true,"types":["syn::item::ItemMacro2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMod.html\" title=\"struct syn::ItemMod\">ItemMod</a>","synthetic":true,"types":["syn::item::ItemMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStatic.html\" title=\"struct syn::ItemStatic\">ItemStatic</a>","synthetic":true,"types":["syn::item::ItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStruct.html\" title=\"struct syn::ItemStruct\">ItemStruct</a>","synthetic":true,"types":["syn::item::ItemStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTrait.html\" title=\"struct syn::ItemTrait\">ItemTrait</a>","synthetic":true,"types":["syn::item::ItemTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTraitAlias.html\" title=\"struct syn::ItemTraitAlias\">ItemTraitAlias</a>","synthetic":true,"types":["syn::item::ItemTraitAlias"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemType.html\" title=\"struct syn::ItemType\">ItemType</a>","synthetic":true,"types":["syn::item::ItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUnion.html\" title=\"struct syn::ItemUnion\">ItemUnion</a>","synthetic":true,"types":["syn::item::ItemUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUse.html\" title=\"struct syn::ItemUse\">ItemUse</a>","synthetic":true,"types":["syn::item::ItemUse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Receiver.html\" title=\"struct syn::Receiver\">Receiver</a>","synthetic":true,"types":["syn::item::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Signature.html\" title=\"struct syn::Signature\">Signature</a>","synthetic":true,"types":["syn::item::Signature"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemConst.html\" title=\"struct syn::TraitItemConst\">TraitItemConst</a>","synthetic":true,"types":["syn::item::TraitItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMacro.html\" title=\"struct syn::TraitItemMacro\">TraitItemMacro</a>","synthetic":true,"types":["syn::item::TraitItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMethod.html\" title=\"struct syn::TraitItemMethod\">TraitItemMethod</a>","synthetic":true,"types":["syn::item::TraitItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemType.html\" title=\"struct syn::TraitItemType\">TraitItemType</a>","synthetic":true,"types":["syn::item::TraitItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGlob.html\" title=\"struct syn::UseGlob\">UseGlob</a>","synthetic":true,"types":["syn::item::UseGlob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGroup.html\" title=\"struct syn::UseGroup\">UseGroup</a>","synthetic":true,"types":["syn::item::UseGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseName.html\" title=\"struct syn::UseName\">UseName</a>","synthetic":true,"types":["syn::item::UseName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UsePath.html\" title=\"struct syn::UsePath\">UsePath</a>","synthetic":true,"types":["syn::item::UsePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseRename.html\" title=\"struct syn::UseRename\">UseRename</a>","synthetic":true,"types":["syn::item::UseRename"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.File.html\" title=\"struct syn::File\">File</a>","synthetic":true,"types":["syn::file::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Lifetime.html\" title=\"struct syn::Lifetime\">Lifetime</a>","synthetic":true,"types":["syn::lifetime::Lifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitBool.html\" title=\"struct syn::LitBool\">LitBool</a>","synthetic":true,"types":["syn::lit::LitBool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByte.html\" title=\"struct syn::LitByte\">LitByte</a>","synthetic":true,"types":["syn::lit::LitByte"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByteStr.html\" title=\"struct syn::LitByteStr\">LitByteStr</a>","synthetic":true,"types":["syn::lit::LitByteStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitChar.html\" title=\"struct syn::LitChar\">LitChar</a>","synthetic":true,"types":["syn::lit::LitChar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitFloat.html\" title=\"struct syn::LitFloat\">LitFloat</a>","synthetic":true,"types":["syn::lit::LitFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitInt.html\" title=\"struct syn::LitInt\">LitInt</a>","synthetic":true,"types":["syn::lit::LitInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitStr.html\" title=\"struct syn::LitStr\">LitStr</a>","synthetic":true,"types":["syn::lit::LitStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Macro.html\" title=\"struct syn::Macro\">Macro</a>","synthetic":true,"types":["syn::mac::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataEnum.html\" title=\"struct syn::DataEnum\">DataEnum</a>","synthetic":true,"types":["syn::derive::DataEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataStruct.html\" title=\"struct syn::DataStruct\">DataStruct</a>","synthetic":true,"types":["syn::derive::DataStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataUnion.html\" title=\"struct syn::DataUnion\">DataUnion</a>","synthetic":true,"types":["syn::derive::DataUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DeriveInput.html\" title=\"struct syn::DeriveInput\">DeriveInput</a>","synthetic":true,"types":["syn::derive::DeriveInput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Block.html\" title=\"struct syn::Block\">Block</a>","synthetic":true,"types":["syn::stmt::Block"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Local.html\" title=\"struct syn::Local\">Local</a>","synthetic":true,"types":["syn::stmt::Local"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Abi.html\" title=\"struct syn::Abi\">Abi</a>","synthetic":true,"types":["syn::ty::Abi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BareFnArg.html\" title=\"struct syn::BareFnArg\">BareFnArg</a>","synthetic":true,"types":["syn::ty::BareFnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeArray.html\" title=\"struct syn::TypeArray\">TypeArray</a>","synthetic":true,"types":["syn::ty::TypeArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeBareFn.html\" title=\"struct syn::TypeBareFn\">TypeBareFn</a>","synthetic":true,"types":["syn::ty::TypeBareFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeGroup.html\" title=\"struct syn::TypeGroup\">TypeGroup</a>","synthetic":true,"types":["syn::ty::TypeGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeImplTrait.html\" title=\"struct syn::TypeImplTrait\">TypeImplTrait</a>","synthetic":true,"types":["syn::ty::TypeImplTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeInfer.html\" title=\"struct syn::TypeInfer\">TypeInfer</a>","synthetic":true,"types":["syn::ty::TypeInfer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeMacro.html\" title=\"struct syn::TypeMacro\">TypeMacro</a>","synthetic":true,"types":["syn::ty::TypeMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeNever.html\" title=\"struct syn::TypeNever\">TypeNever</a>","synthetic":true,"types":["syn::ty::TypeNever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParen.html\" title=\"struct syn::TypeParen\">TypeParen</a>","synthetic":true,"types":["syn::ty::TypeParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePath.html\" title=\"struct syn::TypePath\">TypePath</a>","synthetic":true,"types":["syn::ty::TypePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePtr.html\" title=\"struct syn::TypePtr\">TypePtr</a>","synthetic":true,"types":["syn::ty::TypePtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeReference.html\" title=\"struct syn::TypeReference\">TypeReference</a>","synthetic":true,"types":["syn::ty::TypeReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeSlice.html\" title=\"struct syn::TypeSlice\">TypeSlice</a>","synthetic":true,"types":["syn::ty::TypeSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTraitObject.html\" title=\"struct syn::TypeTraitObject\">TypeTraitObject</a>","synthetic":true,"types":["syn::ty::TypeTraitObject"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTuple.html\" title=\"struct syn::TypeTuple\">TypeTuple</a>","synthetic":true,"types":["syn::ty::TypeTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variadic.html\" title=\"struct syn::Variadic\">Variadic</a>","synthetic":true,"types":["syn::ty::Variadic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldPat.html\" title=\"struct syn::FieldPat\">FieldPat</a>","synthetic":true,"types":["syn::pat::FieldPat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatBox.html\" title=\"struct syn::PatBox\">PatBox</a>","synthetic":true,"types":["syn::pat::PatBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatIdent.html\" title=\"struct syn::PatIdent\">PatIdent</a>","synthetic":true,"types":["syn::pat::PatIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatLit.html\" title=\"struct syn::PatLit\">PatLit</a>","synthetic":true,"types":["syn::pat::PatLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatMacro.html\" title=\"struct syn::PatMacro\">PatMacro</a>","synthetic":true,"types":["syn::pat::PatMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatOr.html\" title=\"struct syn::PatOr\">PatOr</a>","synthetic":true,"types":["syn::pat::PatOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatPath.html\" title=\"struct syn::PatPath\">PatPath</a>","synthetic":true,"types":["syn::pat::PatPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRange.html\" title=\"struct syn::PatRange\">PatRange</a>","synthetic":true,"types":["syn::pat::PatRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatReference.html\" title=\"struct syn::PatReference\">PatReference</a>","synthetic":true,"types":["syn::pat::PatReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRest.html\" title=\"struct syn::PatRest\">PatRest</a>","synthetic":true,"types":["syn::pat::PatRest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatSlice.html\" title=\"struct syn::PatSlice\">PatSlice</a>","synthetic":true,"types":["syn::pat::PatSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatStruct.html\" title=\"struct syn::PatStruct\">PatStruct</a>","synthetic":true,"types":["syn::pat::PatStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTuple.html\" title=\"struct syn::PatTuple\">PatTuple</a>","synthetic":true,"types":["syn::pat::PatTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTupleStruct.html\" title=\"struct syn::PatTupleStruct\">PatTupleStruct</a>","synthetic":true,"types":["syn::pat::PatTupleStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatType.html\" title=\"struct syn::PatType\">PatType</a>","synthetic":true,"types":["syn::pat::PatType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatWild.html\" title=\"struct syn::PatWild\">PatWild</a>","synthetic":true,"types":["syn::pat::PatWild"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.AngleBracketedGenericArguments.html\" title=\"struct syn::AngleBracketedGenericArguments\">AngleBracketedGenericArguments</a>","synthetic":true,"types":["syn::path::AngleBracketedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Binding.html\" title=\"struct syn::Binding\">Binding</a>","synthetic":true,"types":["syn::path::Binding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Constraint.html\" title=\"struct syn::Constraint\">Constraint</a>","synthetic":true,"types":["syn::path::Constraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ParenthesizedGenericArguments.html\" title=\"struct syn::ParenthesizedGenericArguments\">ParenthesizedGenericArguments</a>","synthetic":true,"types":["syn::path::ParenthesizedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Path.html\" title=\"struct syn::Path\">Path</a>","synthetic":true,"types":["syn::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PathSegment.html\" title=\"struct syn::PathSegment\">PathSegment</a>","synthetic":true,"types":["syn::path::PathSegment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.QSelf.html\" title=\"struct syn::QSelf\">QSelf</a>","synthetic":true,"types":["syn::path::QSelf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Error.html\" title=\"struct syn::Error\">Error</a>","synthetic":true,"types":["syn::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.AttrStyle.html\" title=\"enum syn::AttrStyle\">AttrStyle</a>","synthetic":true,"types":["syn::attr::AttrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Meta.html\" title=\"enum syn::Meta\">Meta</a>","synthetic":true,"types":["syn::attr::Meta"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.NestedMeta.html\" title=\"enum syn::NestedMeta\">NestedMeta</a>","synthetic":true,"types":["syn::attr::NestedMeta"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Fields.html\" title=\"enum syn::Fields\">Fields</a>","synthetic":true,"types":["syn::data::Fields"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Visibility.html\" title=\"enum syn::Visibility\">Visibility</a>","synthetic":true,"types":["syn::data::Visibility"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericMethodArgument.html\" title=\"enum syn::GenericMethodArgument\">GenericMethodArgument</a>","synthetic":true,"types":["syn::expr::GenericMethodArgument"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.RangeLimits.html\" title=\"enum syn::RangeLimits\">RangeLimits</a>","synthetic":true,"types":["syn::expr::RangeLimits"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Expr.html\" title=\"enum syn::Expr\">Expr</a>","synthetic":true,"types":["syn::expr::Expr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Member.html\" title=\"enum syn::Member\">Member</a>","synthetic":true,"types":["syn::expr::Member"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericParam.html\" title=\"enum syn::GenericParam\">GenericParam</a>","synthetic":true,"types":["syn::generics::GenericParam"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitBoundModifier.html\" title=\"enum syn::TraitBoundModifier\">TraitBoundModifier</a>","synthetic":true,"types":["syn::generics::TraitBoundModifier"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TypeParamBound.html\" title=\"enum syn::TypeParamBound\">TypeParamBound</a>","synthetic":true,"types":["syn::generics::TypeParamBound"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.WherePredicate.html\" title=\"enum syn::WherePredicate\">WherePredicate</a>","synthetic":true,"types":["syn::generics::WherePredicate"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.FnArg.html\" title=\"enum syn::FnArg\">FnArg</a>","synthetic":true,"types":["syn::item::FnArg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ForeignItem.html\" title=\"enum syn::ForeignItem\">ForeignItem</a>","synthetic":true,"types":["syn::item::ForeignItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ImplItem.html\" title=\"enum syn::ImplItem\">ImplItem</a>","synthetic":true,"types":["syn::item::ImplItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Item.html\" title=\"enum syn::Item\">Item</a>","synthetic":true,"types":["syn::item::Item"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitItem.html\" title=\"enum syn::TraitItem\">TraitItem</a>","synthetic":true,"types":["syn::item::TraitItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UseTree.html\" title=\"enum syn::UseTree\">UseTree</a>","synthetic":true,"types":["syn::item::UseTree"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Lit.html\" title=\"enum syn::Lit\">Lit</a>","synthetic":true,"types":["syn::lit::Lit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.StrStyle.html\" title=\"enum syn::StrStyle\">StrStyle</a>","synthetic":true,"types":["syn::lit::StrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.MacroDelimiter.html\" title=\"enum syn::MacroDelimiter\">MacroDelimiter</a>","synthetic":true,"types":["syn::mac::MacroDelimiter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Data.html\" title=\"enum syn::Data\">Data</a>","synthetic":true,"types":["syn::derive::Data"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.BinOp.html\" title=\"enum syn::BinOp\">BinOp</a>","synthetic":true,"types":["syn::op::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UnOp.html\" title=\"enum syn::UnOp\">UnOp</a>","synthetic":true,"types":["syn::op::UnOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Stmt.html\" title=\"enum syn::Stmt\">Stmt</a>","synthetic":true,"types":["syn::stmt::Stmt"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ReturnType.html\" title=\"enum syn::ReturnType\">ReturnType</a>","synthetic":true,"types":["syn::ty::ReturnType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Type.html\" title=\"enum syn::Type\">Type</a>","synthetic":true,"types":["syn::ty::Type"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Pat.html\" title=\"enum syn::Pat\">Pat</a>","synthetic":true,"types":["syn::pat::Pat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericArgument.html\" title=\"enum syn::GenericArgument\">GenericArgument</a>","synthetic":true,"types":["syn::path::GenericArgument"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.PathArguments.html\" title=\"enum syn::PathArguments\">PathArguments</a>","synthetic":true,"types":["syn::path::PathArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Underscore.html\" title=\"struct syn::token::Underscore\">Underscore</a>","synthetic":true,"types":["syn::token::Underscore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Abstract.html\" title=\"struct syn::token::Abstract\">Abstract</a>","synthetic":true,"types":["syn::token::Abstract"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.As.html\" title=\"struct syn::token::As\">As</a>","synthetic":true,"types":["syn::token::As"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Async.html\" title=\"struct syn::token::Async\">Async</a>","synthetic":true,"types":["syn::token::Async"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Auto.html\" title=\"struct syn::token::Auto\">Auto</a>","synthetic":true,"types":["syn::token::Auto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Await.html\" title=\"struct syn::token::Await\">Await</a>","synthetic":true,"types":["syn::token::Await"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Become.html\" title=\"struct syn::token::Become\">Become</a>","synthetic":true,"types":["syn::token::Become"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Box.html\" title=\"struct syn::token::Box\">Box</a>","synthetic":true,"types":["syn::token::Box"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Break.html\" title=\"struct syn::token::Break\">Break</a>","synthetic":true,"types":["syn::token::Break"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Const.html\" title=\"struct syn::token::Const\">Const</a>","synthetic":true,"types":["syn::token::Const"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Continue.html\" title=\"struct syn::token::Continue\">Continue</a>","synthetic":true,"types":["syn::token::Continue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Crate.html\" title=\"struct syn::token::Crate\">Crate</a>","synthetic":true,"types":["syn::token::Crate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Default.html\" title=\"struct syn::token::Default\">Default</a>","synthetic":true,"types":["syn::token::Default"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Do.html\" title=\"struct syn::token::Do\">Do</a>","synthetic":true,"types":["syn::token::Do"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dyn.html\" title=\"struct syn::token::Dyn\">Dyn</a>","synthetic":true,"types":["syn::token::Dyn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Else.html\" title=\"struct syn::token::Else\">Else</a>","synthetic":true,"types":["syn::token::Else"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Enum.html\" title=\"struct syn::token::Enum\">Enum</a>","synthetic":true,"types":["syn::token::Enum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Extern.html\" title=\"struct syn::token::Extern\">Extern</a>","synthetic":true,"types":["syn::token::Extern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Final.html\" title=\"struct syn::token::Final\">Final</a>","synthetic":true,"types":["syn::token::Final"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Fn.html\" title=\"struct syn::token::Fn\">Fn</a>","synthetic":true,"types":["syn::token::Fn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.For.html\" title=\"struct syn::token::For\">For</a>","synthetic":true,"types":["syn::token::For"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.If.html\" title=\"struct syn::token::If\">If</a>","synthetic":true,"types":["syn::token::If"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Impl.html\" title=\"struct syn::token::Impl\">Impl</a>","synthetic":true,"types":["syn::token::Impl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.In.html\" title=\"struct syn::token::In\">In</a>","synthetic":true,"types":["syn::token::In"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Let.html\" title=\"struct syn::token::Let\">Let</a>","synthetic":true,"types":["syn::token::Let"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Loop.html\" title=\"struct syn::token::Loop\">Loop</a>","synthetic":true,"types":["syn::token::Loop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Macro.html\" title=\"struct syn::token::Macro\">Macro</a>","synthetic":true,"types":["syn::token::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Match.html\" title=\"struct syn::token::Match\">Match</a>","synthetic":true,"types":["syn::token::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mod.html\" title=\"struct syn::token::Mod\">Mod</a>","synthetic":true,"types":["syn::token::Mod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Move.html\" title=\"struct syn::token::Move\">Move</a>","synthetic":true,"types":["syn::token::Move"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mut.html\" title=\"struct syn::token::Mut\">Mut</a>","synthetic":true,"types":["syn::token::Mut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Override.html\" title=\"struct syn::token::Override\">Override</a>","synthetic":true,"types":["syn::token::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Priv.html\" title=\"struct syn::token::Priv\">Priv</a>","synthetic":true,"types":["syn::token::Priv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pub.html\" title=\"struct syn::token::Pub\">Pub</a>","synthetic":true,"types":["syn::token::Pub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ref.html\" title=\"struct syn::token::Ref\">Ref</a>","synthetic":true,"types":["syn::token::Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Return.html\" title=\"struct syn::token::Return\">Return</a>","synthetic":true,"types":["syn::token::Return"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfType.html\" title=\"struct syn::token::SelfType\">SelfType</a>","synthetic":true,"types":["syn::token::SelfType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfValue.html\" title=\"struct syn::token::SelfValue\">SelfValue</a>","synthetic":true,"types":["syn::token::SelfValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Static.html\" title=\"struct syn::token::Static\">Static</a>","synthetic":true,"types":["syn::token::Static"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Struct.html\" title=\"struct syn::token::Struct\">Struct</a>","synthetic":true,"types":["syn::token::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Super.html\" title=\"struct syn::token::Super\">Super</a>","synthetic":true,"types":["syn::token::Super"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Trait.html\" title=\"struct syn::token::Trait\">Trait</a>","synthetic":true,"types":["syn::token::Trait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Try.html\" title=\"struct syn::token::Try\">Try</a>","synthetic":true,"types":["syn::token::Try"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Type.html\" title=\"struct syn::token::Type\">Type</a>","synthetic":true,"types":["syn::token::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Typeof.html\" title=\"struct syn::token::Typeof\">Typeof</a>","synthetic":true,"types":["syn::token::Typeof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Union.html\" title=\"struct syn::token::Union\">Union</a>","synthetic":true,"types":["syn::token::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsafe.html\" title=\"struct syn::token::Unsafe\">Unsafe</a>","synthetic":true,"types":["syn::token::Unsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsized.html\" title=\"struct syn::token::Unsized\">Unsized</a>","synthetic":true,"types":["syn::token::Unsized"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Use.html\" title=\"struct syn::token::Use\">Use</a>","synthetic":true,"types":["syn::token::Use"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Virtual.html\" title=\"struct syn::token::Virtual\">Virtual</a>","synthetic":true,"types":["syn::token::Virtual"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Where.html\" title=\"struct syn::token::Where\">Where</a>","synthetic":true,"types":["syn::token::Where"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.While.html\" title=\"struct syn::token::While\">While</a>","synthetic":true,"types":["syn::token::While"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Yield.html\" title=\"struct syn::token::Yield\">Yield</a>","synthetic":true,"types":["syn::token::Yield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Add.html\" title=\"struct syn::token::Add\">Add</a>","synthetic":true,"types":["syn::token::Add"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AddEq.html\" title=\"struct syn::token::AddEq\">AddEq</a>","synthetic":true,"types":["syn::token::AddEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.And.html\" title=\"struct syn::token::And\">And</a>","synthetic":true,"types":["syn::token::And"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndAnd.html\" title=\"struct syn::token::AndAnd\">AndAnd</a>","synthetic":true,"types":["syn::token::AndAnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndEq.html\" title=\"struct syn::token::AndEq\">AndEq</a>","synthetic":true,"types":["syn::token::AndEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.At.html\" title=\"struct syn::token::At\">At</a>","synthetic":true,"types":["syn::token::At"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bang.html\" title=\"struct syn::token::Bang\">Bang</a>","synthetic":true,"types":["syn::token::Bang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Caret.html\" title=\"struct syn::token::Caret\">Caret</a>","synthetic":true,"types":["syn::token::Caret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.CaretEq.html\" title=\"struct syn::token::CaretEq\">CaretEq</a>","synthetic":true,"types":["syn::token::CaretEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon.html\" title=\"struct syn::token::Colon\">Colon</a>","synthetic":true,"types":["syn::token::Colon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon2.html\" title=\"struct syn::token::Colon2\">Colon2</a>","synthetic":true,"types":["syn::token::Colon2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Comma.html\" title=\"struct syn::token::Comma\">Comma</a>","synthetic":true,"types":["syn::token::Comma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Div.html\" title=\"struct syn::token::Div\">Div</a>","synthetic":true,"types":["syn::token::Div"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DivEq.html\" title=\"struct syn::token::DivEq\">DivEq</a>","synthetic":true,"types":["syn::token::DivEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dollar.html\" title=\"struct syn::token::Dollar\">Dollar</a>","synthetic":true,"types":["syn::token::Dollar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot.html\" title=\"struct syn::token::Dot\">Dot</a>","synthetic":true,"types":["syn::token::Dot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot2.html\" title=\"struct syn::token::Dot2\">Dot2</a>","synthetic":true,"types":["syn::token::Dot2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot3.html\" title=\"struct syn::token::Dot3\">Dot3</a>","synthetic":true,"types":["syn::token::Dot3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DotDotEq.html\" title=\"struct syn::token::DotDotEq\">DotDotEq</a>","synthetic":true,"types":["syn::token::DotDotEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Eq.html\" title=\"struct syn::token::Eq\">Eq</a>","synthetic":true,"types":["syn::token::Eq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.EqEq.html\" title=\"struct syn::token::EqEq\">EqEq</a>","synthetic":true,"types":["syn::token::EqEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ge.html\" title=\"struct syn::token::Ge\">Ge</a>","synthetic":true,"types":["syn::token::Ge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Gt.html\" title=\"struct syn::token::Gt\">Gt</a>","synthetic":true,"types":["syn::token::Gt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Le.html\" title=\"struct syn::token::Le\">Le</a>","synthetic":true,"types":["syn::token::Le"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Lt.html\" title=\"struct syn::token::Lt\">Lt</a>","synthetic":true,"types":["syn::token::Lt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.MulEq.html\" title=\"struct syn::token::MulEq\">MulEq</a>","synthetic":true,"types":["syn::token::MulEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ne.html\" title=\"struct syn::token::Ne\">Ne</a>","synthetic":true,"types":["syn::token::Ne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Or.html\" title=\"struct syn::token::Or\">Or</a>","synthetic":true,"types":["syn::token::Or"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrEq.html\" title=\"struct syn::token::OrEq\">OrEq</a>","synthetic":true,"types":["syn::token::OrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrOr.html\" title=\"struct syn::token::OrOr\">OrOr</a>","synthetic":true,"types":["syn::token::OrOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pound.html\" title=\"struct syn::token::Pound\">Pound</a>","synthetic":true,"types":["syn::token::Pound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Question.html\" title=\"struct syn::token::Question\">Question</a>","synthetic":true,"types":["syn::token::Question"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RArrow.html\" title=\"struct syn::token::RArrow\">RArrow</a>","synthetic":true,"types":["syn::token::RArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.LArrow.html\" title=\"struct syn::token::LArrow\">LArrow</a>","synthetic":true,"types":["syn::token::LArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Rem.html\" title=\"struct syn::token::Rem\">Rem</a>","synthetic":true,"types":["syn::token::Rem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RemEq.html\" title=\"struct syn::token::RemEq\">RemEq</a>","synthetic":true,"types":["syn::token::RemEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.FatArrow.html\" title=\"struct syn::token::FatArrow\">FatArrow</a>","synthetic":true,"types":["syn::token::FatArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Semi.html\" title=\"struct syn::token::Semi\">Semi</a>","synthetic":true,"types":["syn::token::Semi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shl.html\" title=\"struct syn::token::Shl\">Shl</a>","synthetic":true,"types":["syn::token::Shl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShlEq.html\" title=\"struct syn::token::ShlEq\">ShlEq</a>","synthetic":true,"types":["syn::token::ShlEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shr.html\" title=\"struct syn::token::Shr\">Shr</a>","synthetic":true,"types":["syn::token::Shr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShrEq.html\" title=\"struct syn::token::ShrEq\">ShrEq</a>","synthetic":true,"types":["syn::token::ShrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Star.html\" title=\"struct syn::token::Star\">Star</a>","synthetic":true,"types":["syn::token::Star"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Sub.html\" title=\"struct syn::token::Sub\">Sub</a>","synthetic":true,"types":["syn::token::Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SubEq.html\" title=\"struct syn::token::SubEq\">SubEq</a>","synthetic":true,"types":["syn::token::SubEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Tilde.html\" title=\"struct syn::token::Tilde\">Tilde</a>","synthetic":true,"types":["syn::token::Tilde"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Brace.html\" title=\"struct syn::token::Brace\">Brace</a>","synthetic":true,"types":["syn::token::Brace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bracket.html\" title=\"struct syn::token::Bracket\">Bracket</a>","synthetic":true,"types":["syn::token::Bracket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Paren.html\" title=\"struct syn::token::Paren\">Paren</a>","synthetic":true,"types":["syn::token::Paren"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Group.html\" title=\"struct syn::token::Group\">Group</a>","synthetic":true,"types":["syn::token::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/buffer/struct.TokenBuffer.html\" title=\"struct syn::buffer::TokenBuffer\">TokenBuffer</a>","synthetic":true,"types":["syn::buffer::TokenBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/buffer/struct.Cursor.html\" title=\"struct syn::buffer::Cursor\">Cursor</a>&lt;'a&gt;","synthetic":true,"types":["syn::buffer::Cursor"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Punctuated.html\" title=\"struct syn::punctuated::Punctuated\">Punctuated</a>&lt;T, P&gt;","synthetic":true,"types":["syn::punctuated::Punctuated"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Pairs.html\" title=\"struct syn::punctuated::Pairs\">Pairs</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::Pairs"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.PairsMut.html\" title=\"struct syn::punctuated::PairsMut\">PairsMut</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::PairsMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoPairs.html\" title=\"struct syn::punctuated::IntoPairs\">IntoPairs</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::IntoPairs"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoIter.html\" title=\"struct syn::punctuated::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["syn::punctuated::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Iter.html\" title=\"struct syn::punctuated::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IterMut.html\" title=\"struct syn::punctuated::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::IterMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"enum\" href=\"syn/punctuated/enum.Pair.html\" title=\"enum syn::punctuated::Pair\">Pair</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::Pair"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.Lookahead1.html\" title=\"struct syn::parse::Lookahead1\">Lookahead1</a>&lt;'a&gt;","synthetic":true,"types":["syn::lookahead::Lookahead1"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.ParseBuffer.html\" title=\"struct syn::parse::ParseBuffer\">ParseBuffer</a>&lt;'a&gt;","synthetic":true,"types":["syn::parse::ParseBuffer"]},{"text":"impl&lt;'c, 'a&gt; Freeze for <a class=\"struct\" href=\"syn/parse/struct.StepCursor.html\" title=\"struct syn::parse::StepCursor\">StepCursor</a>&lt;'c, 'a&gt;","synthetic":true,"types":["syn::parse::StepCursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Nothing.html\" title=\"struct syn::parse::Nothing\">Nothing</a>","synthetic":true,"types":["syn::parse::Nothing"]}];
implementors["typenum"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Greater.html\" title=\"struct typenum::Greater\">Greater</a>","synthetic":true,"types":["typenum::Greater"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Less.html\" title=\"struct typenum::Less\">Less</a>","synthetic":true,"types":["typenum::Less"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Equal.html\" title=\"struct typenum::Equal\">Equal</a>","synthetic":true,"types":["typenum::Equal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>","synthetic":true,"types":["typenum::bit::B0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>","synthetic":true,"types":["typenum::bit::B1"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::PInt"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::NInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>","synthetic":true,"types":["typenum::int::Z0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>","synthetic":true,"types":["typenum::uint::UTerm"]},{"text":"impl&lt;U, B&gt; Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::uint::UInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/array/struct.ATerm.html\" title=\"struct typenum::array::ATerm\">ATerm</a>","synthetic":true,"types":["typenum::array::ATerm"]},{"text":"impl&lt;V, A&gt; Freeze for <a class=\"struct\" href=\"typenum/array/struct.TArr.html\" title=\"struct typenum::array::TArr\">TArr</a>&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::array::TArr"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()